////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#include "input.hpp"
#include "me.hpp"
#include "session.hpp"
#include "utils.hpp"

////////////////////////////////////////////////////////////////////////////////
namespace atem
{

////////////////////////////////////////////////////////////////////////////////
void me::set_pgm(input_id id)
{
    sess_.get().set_pgm(num_, id);
}

////////////////////////////////////////////////////////////////////////////////
void me::set_pgm(const input& in)
{
    set_pgm(in.id());
}

////////////////////////////////////////////////////////////////////////////////
void me::set_pvw(input_id id)
{
    sess_.get().set_pvw(num_, id);
}

////////////////////////////////////////////////////////////////////////////////
void me::set_pvw(const input& in)
{
    set_pvw(in.id());
}

////////////////////////////////////////////////////////////////////////////////
void me::cut()
{
    sess_.get().cut(num_);
}

////////////////////////////////////////////////////////////////////////////////
void me::auto_trans()
{
    sess_.get().auto_trans(num_);
}

////////////////////////////////////////////////////////////////////////////////
void me::change_pgm(input_id id)
{
    pgm_ = id;
    maybe_call(pgm_chng_cb_, id);
}

////////////////////////////////////////////////////////////////////////////////
void me::change_pvw(input_id id)
{
    pvw_ = id;
    maybe_call(pvw_chng_cb_, id);
}

////////////////////////////////////////////////////////////////////////////////
}
