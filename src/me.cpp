////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#include "input.hpp"
#include "me.hpp"
#include "me_data.hpp"
#include "session.hpp"

////////////////////////////////////////////////////////////////////////////////
namespace atem
{

////////////////////////////////////////////////////////////////////////////////
me_num me::num() const { return data_.get().num; }

////////////////////////////////////////////////////////////////////////////////
void me::set_pgm(src_id src) { sess_.get().set_pgm(num(), src); }

////////////////////////////////////////////////////////////////////////////////
void me::set_pgm(const input& in) { set_pgm(in.id()); }

////////////////////////////////////////////////////////////////////////////////
void me::set_pvw(src_id src) { sess_.get().set_pvw(num(), src); }

////////////////////////////////////////////////////////////////////////////////
void me::set_pvw(const input& in) { set_pvw(in.id()); }

////////////////////////////////////////////////////////////////////////////////
void me::cut() { sess_.get().cut(num()); }

////////////////////////////////////////////////////////////////////////////////
void me::auto_trans() { sess_.get().auto_trans(num()); }

////////////////////////////////////////////////////////////////////////////////
}
