////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#include "input.hpp"
#include "input_data.hpp"
#include "me.hpp"
#include "session.hpp"

////////////////////////////////////////////////////////////////////////////////
namespace atem
{

////////////////////////////////////////////////////////////////////////////////
src_id input::id() const { return data_.get().id; }

////////////////////////////////////////////////////////////////////////////////
const string& input::name() const
{
    return data_.get().name;
}

////////////////////////////////////////////////////////////////////////////////
void input::set_name(string name)
{
    sess_.get().set_input_props(id(), std::move(name), { }, { });
}

////////////////////////////////////////////////////////////////////////////////
const string& input::long_name() const
{
    return data_.get().long_name;
}

////////////////////////////////////////////////////////////////////////////////
void input::set_long_name(string long_name)
{
    sess_.get().set_input_props(id(), { }, std::move(long_name), { });
}

////////////////////////////////////////////////////////////////////////////////
input_type input::type() const { return data_.get().type; }

////////////////////////////////////////////////////////////////////////////////
input_port input::port() const { return data_.get().port; }

////////////////////////////////////////////////////////////////////////////////
void input::set_port(input_port port)
{
    sess_.get().set_input_props(id(), { }, { }, port);
}

////////////////////////////////////////////////////////////////////////////////
void input::pgm_on(me_num me) { sess_.get().set_pgm(me, id()); }

////////////////////////////////////////////////////////////////////////////////
void input::pgm_on(const atem::me& me) { pgm_on(me.num()); }

////////////////////////////////////////////////////////////////////////////////
void input::pvw_on(me_num me) { sess_.get().set_pvw(me, id()); }

////////////////////////////////////////////////////////////////////////////////
void input::pvw_on(const atem::me& me) { pvw_on(me.num()); }

////////////////////////////////////////////////////////////////////////////////
}
